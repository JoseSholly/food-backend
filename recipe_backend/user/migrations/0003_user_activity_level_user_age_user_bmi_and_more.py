# Generated by Django 4.2.16 on 2025-01-25 16:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('user', '0002_passwordresettoken'),
    ]

    operations = [
        migrations.AddField(
            model_name='user',
            name='activity_level',
            field=models.CharField(blank=True, help_text='Activity level of user', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='age',
            field=models.PositiveIntegerField(blank=True, help_text='User age', null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='bmi',
            field=models.FloatField(blank=True, help_text='Body Mass index of user', null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='bmi_category',
            field=models.CharField(blank=True, help_text='BMI category', max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Time usr was created'),
        ),
        migrations.AddField(
            model_name='user',
            name='dietary_restrictions',
            field=models.JSONField(blank=True, default=list, help_text='Dietary restrictions of user'),
        ),
        migrations.AddField(
            model_name='user',
            name='has_completed_profile',
            field=models.BooleanField(default=False, help_text='Designates if user has completed profile'),
        ),
        migrations.AddField(
            model_name='user',
            name='health_conditions',
            field=models.JSONField(blank=True, default=list, help_text='Health conditions of user'),
        ),
        migrations.AddField(
            model_name='user',
            name='height',
            field=models.FloatField(blank=True, help_text='User height', null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='last_streak_date',
            field=models.DateTimeField(blank=True, help_text='User last streak date', null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='lifestyle_preferences',
            field=models.JSONField(blank=True, default=list, help_text='Lifestyle preferences of user'),
        ),
        migrations.AddField(
            model_name='user',
            name='nutritional_goals',
            field=models.JSONField(blank=True, default=list, help_text='Nutritional goals of user'),
        ),
        migrations.AddField(
            model_name='user',
            name='streak',
            field=models.PositiveIntegerField(default=0, help_text='User streak'),
        ),
        migrations.AddField(
            model_name='user',
            name='target_calories',
            field=models.PositiveIntegerField(blank=True, help_text='Calories target set by user', null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='target_weight',
            field=models.FloatField(blank=True, help_text='Weight target set by user', null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Last time user update model'),
        ),
        migrations.AddField(
            model_name='user',
            name='weight',
            field=models.FloatField(blank=True, help_text='Weight of user', null=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='id',
            field=models.AutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterUniqueTogether(
            name='passwordresettoken',
            unique_together={('user', 'is_used')},
        ),
        migrations.CreateModel(
            name='WeightLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField()),
                ('logged_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='Time weight was logged')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weight_logs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WeightGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal_weight', models.FloatField(help_text='The weight user wants to achieve')),
                ('deadline', models.DateField(blank=True, help_text='The deadline for achieving the goal', null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='weight_goal', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
